{
  "name": "ai-pdf-chat-monorepo",
  "version": "1.0.0",
  "description": "AI-powered PDF chat application - Full Stack Monorepo",
  "private": true,
  "scripts": {
    "setup": "npm run setup:step1 && npm run setup:step2 && npm run setup:step3 && npm run setup:step4",
    "setup:step1": "echo '🚀 Step 1: Installing Angular CLI globally...' && npm install -g @angular/cli",
    "setup:step2": "echo '🔧 Step 2: Installing root workspace dependencies...' && npm install",
    "setup:step3": "echo '⚙️  Step 3: Installing backend dependencies...' && cd backend && npm install",
    "setup:step4": "echo '🎨 Step 4: Installing frontend dependencies...' && cd frontend && npm install",

    "setup:clean": "npm run clean && echo '🧹 Cleaned all node_modules'",
    "setup:verify": "echo '✅ Verifying installations...' && npm run verify:node && npm run verify:angular && npm run verify:backend && npm run verify:frontend",
    "verify:node": "echo '📦 Node version:' && node --version && echo '📦 NPM version:' && npm --version",
    "verify:angular": "echo '🅰️  Angular CLI:' && npx ng version --skip-git",
    "verify:backend": "echo '⚙️  Backend dependencies:' && cd backend && npm list --depth=0",
    "verify:frontend": "echo '🎨 Frontend dependencies:' && cd frontend && npm list --depth=0",

    "install:angular": "npm install -g @angular/cli",
    "install:backend": "cd backend && npm install",
    "install:frontend": "cd frontend && npm install",

    "dev": "node scripts/start-dev.js",
    "dev:simple": "npm run docker:up && concurrently \"npm run dev:backend\" \"npm run dev:frontend\"",
    "dev:backend": "cd backend && npm run dev",
    "dev:frontend": "cd frontend && npm start",
    "prod:test": "concurrently \"npm run prod:test:backend\" \"npm run dev:frontend\"",
    "prod:test:backend": "cd backend && npm run prod:test",

    "build": "echo '🔨 Starting build process...' && npm run build:frontend && npm run build:backend && echo '✅ Build complete!'",
    "build:backend": "echo '⚙️ Installing backend deps...' && cd backend && npm install",
    "build:frontend": "echo '🎨 Building frontend...' && cd frontend && npm install && echo '📦 Frontend deps installed' && npx -p @angular/cli ng build && echo '✅ Frontend build complete' && ls -la dist/",
    "railway:build": "cd frontend && npm ci && npm run build && cd ../backend && npm ci",

    "start": "cd backend && npm start",
    "start:backend": "cd backend && npm start",
    "start:frontend": "cd frontend && npm run serve",

    "test": "npm run test:backend && npm run test:frontend",
    "test:backend": "cd backend && npm test",
    "test:frontend": "cd frontend && npm test",

    "docker:up": "cd backend && npm run docker:up",
    "docker:down": "cd backend && npm run docker:down",
    "docker:dev": "cd backend && npm run docker:dev",
    "docker:dev:down": "cd backend && npm run docker:dev:down",
    "docker:status": "docker ps --filter name=chroma --format \"table {{.Names}}\\t{{.Status}}\\t{{.Ports}}\"",

    "lint": "npm run lint:backend && npm run lint:frontend",
    "lint:backend": "cd backend && npm run lint",
    "lint:frontend": "cd frontend && npm run lint",

    "clean": "npm run clean:backend && npm run clean:frontend && npm run clean:root",
    "clean:root": "rm -rf node_modules package-lock.json",
    "clean:backend": "cd backend && rm -rf node_modules package-lock.json",
    "clean:frontend": "cd frontend && rm -rf node_modules package-lock.json",

    "help": "echo '🚀 AI PDF Chat - Setup Commands:' && echo '' && echo '📋 Setup Commands:' && echo '  npm run setup           - Complete setup (all steps)' && echo '  npm run setup:step1     - Install Angular CLI globally' && echo '  npm run setup:step2     - Install root dependencies' && echo '  npm run setup:step3     - Install backend dependencies' && echo '  npm run setup:step4     - Install frontend dependencies' && echo '' && echo '🔍 Verification:' && echo '  npm run setup:verify    - Verify all installations' && echo '' && echo '🧹 Cleanup:' && echo '  npm run setup:clean     - Clean all node_modules' && echo '' && echo '🚀 Development:' && echo '  npm run dev             - Smart start (ChromaDB dev + backend + frontend)' && echo '  npm run dev:simple      - Simple start (ChromaDB dev + backend + frontend)' && echo '  npm run dev:backend     - Start backend only' && echo '  npm run dev:frontend    - Start frontend only' && echo '' && echo '🐳 Docker Commands:' && echo '  npm run docker:dev      - Start ChromaDB for development' && echo '  npm run docker:dev:down - Stop ChromaDB development' && echo '  npm run docker:up       - Start ChromaDB for production' && echo '  npm run docker:down     - Stop ChromaDB production' && echo '  npm run docker:status   - Check ChromaDB status'"
  },
  "devDependencies": {
    "concurrently": "^8.2.2"
  },
  "keywords": [
    "ai",
    "pdf",
    "chat",
    "angularjs",
    "nodejs",
    "rag",
    "vectorization",
    "monorepo"
  ],
  "author": "Your Name",
  "license": "MIT",
  "engines": {
    "node": ">=18.0.0",
    "npm": ">=8.0.0"
  }
}
