version: '3.8'

services:
  # Vector Database
  chroma:
    image: chromadb/chroma:latest
    container_name: ai-pdf-chroma
    ports:
      - "8000:8000"
    volumes:
      - chroma_data:/chroma/chroma
    environment:
      - CHROMA_SERVER_HOST=0.0.0.0
      - CHROMA_SERVER_HTTP_PORT=8000
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/api/v1/heartbeat"]
      interval: 30s
      timeout: 10s
      retries: 3
    networks:
      - ai-pdf-network

  # Backend API
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: ai-pdf-backend
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=production
      - PORT=3000
      - CHROMA_URL=http://chroma:8000
      - CORS_ORIGIN=http://localhost:4200
    env_file:
      - ./backend/.env
    volumes:
      - ./backend/uploads:/app/uploads
    depends_on:
      chroma:
        condition: service_healthy
    restart: unless-stopped
    networks:
      - ai-pdf-network

  # Frontend (AngularJS)
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: ai-pdf-frontend
    ports:
      - "4200:80"
    environment:
      - API_BASE_URL=http://localhost:3000/api
    depends_on:
      - backend
    restart: unless-stopped
    networks:
      - ai-pdf-network

  # Nginx Reverse Proxy (Optional)
  nginx:
    image: nginx:alpine
    container_name: ai-pdf-nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./ssl:/etc/nginx/ssl:ro
    depends_on:
      - backend
      - frontend
    restart: unless-stopped
    networks:
      - ai-pdf-network

volumes:
  chroma_data:
    driver: local

networks:
  ai-pdf-network:
    driver: bridge
